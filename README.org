* Derivery

** Setup

*** CI server

    You will need [[https://www.rebar3.org/][rebar3]]. Checkout this repo, build release by running ~rebar3
    release~, start server via ~_build/default/rel/derivery/bin/derivery~.

    Derivery requires two OTP env parameters:

    - ~github_secret~ for webhook secret (arbitrary string)
    - ~github_token~ for private access token with ~repo~ and ~gist~
      capabilities, set up one at https://github.com/settings/tokens

*** Reverse proxy

    CI server is listening on port 50493. It's highly recommended that you set
    up a reverse proxy that does TLS and listens on conventional port.

*** Nix expression

    To set up CI for your project, add ~default.nix~ to the root of your
    repository. It should be a Nix expression that builds your repo and
    optionally runs tests.

    For example, here's how ~default.nix~ might look like for an Autotools project:

    #+BEGIN_SRC nix
    with import <nixpkgs> {};

    stdenv.mkDerivation rec {
      name = "example";
      src = stdenv.lib.cleanSource ./.;

      nativeBuildInputs = [ autoreconfHook pkgconfig ];
      buildInputs = [ gtk3 ];

      enableParallelBuilding = true;
    }
    #+END_SRC

*** GitHub webhook

    Go to https://github.com/owner/repo/settings/hooks and create a
    new webhook. Settings:

    - Payload URL: https://ci.example.com
    - Content type: application/json
    - Secret: same as OTP ~github_secret~
    - Events: only enable "Pull requests"
